version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.4 # every job must define an image for the docker executor and subsequent jobs may define a different image.
        environment:
          PIPENV_VENV_IN_PROJECT: true
          #DATABASE_URL: mysql://root@localhost/circle_test?sslmode=disable
      - image: circleci/mysql:8.0.4 # an example of how to specify a service container
    environment:
          MYSQL_DATABASE: mysql
          MYSQL_USER: root
          MYSQL_PASSWORD: password
    
    working directory: ~/django-circleci-deployment
    
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      #- run: sudo apt install -y mysql-client
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: deps1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Install Python deps in a venv
          command: |
            #sudo apt-get install default-mysql-client
            sudo pip install pipenv
            pipenv install
            #python3 -m venv ~/.virtualenvs/djangodev 
            #python3 -m venv venv
            #.virtualenvs\djangodev\Scripts\activate.bat
            #.venv/bin/activate
            #pip install -r requirements/dev.txt
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps1-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            pipenv run python manage.py test
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results
          destination: tr1
